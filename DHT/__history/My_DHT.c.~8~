/***********************************************
* DHT Library
* Source file "My_DHT.c"
***********************************************/
void DHTStart(){
   DHT_DIR(DHT_DIR1()&0xfe);
   output_bit(DHT_Data ,1);
   output_bit(DHT_Data ,0);delay_ms(20);
   output_bit(DHT_Data ,1);delay_us(1);
   DHT_DIR(DHT_DIR1()|0x01);
}

int DHTcheck(){
   int dht_ch = 0;
   delay_us(40);
   if(input(DHT_Data)==1){ return dht_ch;}
   else { dht_ch = 1;delay_us(82);}
   if(input(DHT_Data)==1){return dht_ch;}
   else { dht_ch = 0;return dht_ch; }
}

int Read_DHT(){
   unsigned int buffer[5]={0x00,0x00,0x00,0x00,0x00};
   unsigned int i,ii;
   unsigned long check_s;
   DHTStart();
   if(DHTcheck()==1){
      while(input(DHT_Data)){}
   } else {
      return 0;
   }
   for(i=0;i<5;i++)  // nhan 5byte du lieu
    {
        for(ii=0;ii<8;ii++)     // nhan tung bit
        {    
            while((!input(DHT_Data))); //Doi Data len 1
            delay_us(50);
            if(input(DHT_Data))
            {
               buffer[i]|=(0x01<<(7-ii));
               while(input(DHT_Data)) ;   //Doi Data xuong 0
            }
        }
    }
   check_s = buffer[0]+buffer[1]+buffer[2]+buffer[3];
   if(check_s!=buffer[4]) return 0;
   Temp = (float)buffer[1]/100;
   Temp = (float)Temp + buffer[0];
   Humi = (float)buffer[3]/100;
   Humi = (float)Temp + buffer[2];
   return 1;
}


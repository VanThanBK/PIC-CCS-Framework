CCS PCM C Compiler, Version 5.015, 5967               08-Jul-17 08:46

               Filename:   D:\PIC_CCS\CBSM\CBSM.lst

               ROM used:   93 words (1%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03D
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <CBSM.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
.................... #USE FAST_IO (c) 
.................... #define led PIN_C0                                             //khai bao chan LED la PIN_C0 
.................... volatile unsigned int Valua = 0;                               //bien dem timer 
....................  
.................... #int_TIMER0 
.................... void TIMER0_isr(void)  
.................... { 
....................    Valua++; 
002F:  INCF   27,F
....................    if(Valua>249){    
0030:  MOVF   27,W
0031:  SUBLW  F9
0032:  BTFSC  03.0
0033:  GOTO   037
....................       output_toggle(led);                                      //dao chan led 
0034:  MOVLW  01
0035:  XORWF  07,F
....................       Valua = 0; 
0036:  CLRF   27
....................    } 
....................    set_timer0(177);                                            //set gia tri ban dau cho tmr0 
0037:  MOVLW  B1
0038:  MOVWF  01
0039:  BCF    0B.2
003A:  BCF    0A.3
003B:  BCF    0A.4
003C:  GOTO   01B
.................... } 
....................  
.................... void main() 
003D:  MOVF   03,W
003E:  ANDLW  1F
003F:  MOVWF  03
0040:  CLRF   27
0041:  BSF    03.5
0042:  BSF    1F.0
0043:  BSF    1F.1
0044:  BSF    1F.2
0045:  BCF    1F.3
0046:  MOVLW  07
0047:  MOVWF  1C
0048:  BCF    03.7
.................... {   
....................    set_tris_c(get_tris_c()&0xfe);                              //khao bao chan led output 
0049:  MOVF   07,W
004A:  ANDLW  FE
004B:  BCF    03.5
004C:  MOVWF  28
004D:  BSF    03.5
004E:  MOVWF  07
....................    enable_interrupts(INT_TIMER0);                              //bat ngat timer0 
004F:  BCF    03.5
0050:  BSF    0B.5
....................    enable_interrupts(GlOBAL);                                  //bat ngat tong 
0051:  MOVLW  C0
0052:  IORWF  0B,F
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128);                  //setup timer 0   :128 
0053:  BSF    03.5
0054:  MOVF   01,W
0055:  ANDLW  C0
0056:  IORLW  06
0057:  MOVWF  01
....................    set_timer0(177);                                            //set gia tri ban dau cho tmr0 
0058:  MOVLW  B1
0059:  BCF    03.5
005A:  MOVWF  01
....................    while(TRUE) 
....................    { 
005B:  GOTO   05B
....................    } 
....................  
.................... } 
.................... /*Tinh timer 
005C:  SLEEP
....................     
....................  
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
